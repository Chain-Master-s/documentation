"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8418],{5937:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"rust-learning/week1-ownership","title":"Week 1: Ownership and Borrowing","description":"Overview","source":"@site/docs/rust-learning/week1-ownership.md","sourceDirName":"rust-learning","slug":"/rust-learning/week1-ownership","permalink":"/documentation/docs/rust-learning/week1-ownership","draft":false,"unlisted":false,"editUrl":"https://github.com/Chain-Master-s/documentation/tree/main/docs/rust-learning/week1-ownership.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Learning Resources","permalink":"/documentation/docs/rust-learning/resources"},"next":{"title":"Week 2: Structs, Enums, and Pattern Matching","permalink":"/documentation/docs/rust-learning/week2-structs"}}');var s=i(4848),t=i(8453);const l={sidebar_position:2},o="Week 1: Ownership and Borrowing",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Topics Covered",id:"topics-covered",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Ownership Rules",id:"ownership-rules",level:3},{value:"Borrowing &amp; Referencing",id:"borrowing--referencing",level:3},{value:"Lifetimes",id:"lifetimes",level:3},{value:"Project: CLI YellowPages",id:"project-cli-yellowpages",level:2},{value:"Project Requirements",id:"project-requirements",level:3},{value:"Learning Objectives",id:"learning-objectives",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"week-1-ownership-and-borrowing",children:"Week 1: Ownership and Borrowing"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"This week focuses on one of Rust's most unique and important features - the ownership system. Understanding ownership and borrowing is crucial for writing safe and efficient Rust code."}),"\n",(0,s.jsx)(n.h2,{id:"topics-covered",children:"Topics Covered"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ownership Rules"}),"\n",(0,s.jsx)(n.li,{children:"Borrowing & Referencing (mutable, immutable)"}),"\n",(0,s.jsx)(n.li,{children:"Lifetimes"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"ownership-rules",children:"Ownership Rules"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Each value in Rust has a variable that's called its owner"}),"\n",(0,s.jsx)(n.li,{children:"There can only be one owner at a time"}),"\n",(0,s.jsx)(n.li,{children:"When the owner goes out of scope, the value will be dropped"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"borrowing--referencing",children:"Borrowing & Referencing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Immutable references (",(0,s.jsx)(n.code,{children:"&T"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Mutable references (",(0,s.jsx)(n.code,{children:"&mut T"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Rules of references:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One mutable reference XOR many immutable references"}),"\n",(0,s.jsx)(n.li,{children:"References must always be valid"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"lifetimes",children:"Lifetimes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lifetime annotations"}),"\n",(0,s.jsx)(n.li,{children:"Lifetime elision"}),"\n",(0,s.jsx)(n.li,{children:"Static lifetimes"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-cli-yellowpages",children:"Project: CLI YellowPages"}),"\n",(0,s.jsx)(n.p,{children:"Build a command-line contact book that demonstrates:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ownership of contact data"}),"\n",(0,s.jsx)(n.li,{children:"Borrowing for reading contacts"}),"\n",(0,s.jsx)(n.li,{children:"Mutable borrowing for updating contacts"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"project-requirements",children:"Project Requirements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Add new contacts"}),"\n",(0,s.jsx)(n.li,{children:"View existing contacts"}),"\n",(0,s.jsx)(n.li,{children:"Update contact information"}),"\n",(0,s.jsx)(n.li,{children:"Delete contacts"}),"\n",(0,s.jsx)(n.li,{children:"Search functionality"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Practice ownership concepts"}),"\n",(0,s.jsx)(n.li,{children:"Implement borrowing patterns"}),"\n",(0,s.jsx)(n.li,{children:"Handle string ownership"}),"\n",(0,s.jsx)(n.li,{children:"Manage data structures with ownership rules"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html",children:"Rust Book Chapter 4: Understanding Ownership"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://doc.rust-lang.org/rust-by-example/scope.html",children:"Rust By Example: Ownership and Borrowing"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);