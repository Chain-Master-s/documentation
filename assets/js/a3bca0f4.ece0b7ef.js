"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4291],{7184:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rust-learning/week2-structs","title":"Week 2: Structs, Enums, and Pattern Matching","description":"Overview","source":"@site/docs/rust-learning/week2-structs.md","sourceDirName":"rust-learning","slug":"/rust-learning/week2-structs","permalink":"/documentation/docs/rust-learning/week2-structs","draft":false,"unlisted":false,"editUrl":"https://github.com/Chain-Master-s/documentation/tree/main/docs/rust-learning/week2-structs.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Week 1: Ownership and Borrowing","permalink":"/documentation/docs/rust-learning/week1-ownership"},"next":{"title":"Blockchain Development","permalink":"/documentation/docs/category/blockchain-development"}}');var i=t(4848),r=t(8453);const l={sidebar_position:3},c="Week 2: Structs, Enums, and Pattern Matching",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Topics Covered",id:"topics-covered",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Structs",id:"structs",level:3},{value:"Enums",id:"enums",level:3},{value:"Pattern Matching",id:"pattern-matching",level:3},{value:"Project: Task Manager",id:"project-task-manager",level:2},{value:"Project Requirements",id:"project-requirements",level:3},{value:"Learning Objectives",id:"learning-objectives",level:3},{value:"Resources",id:"resources",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"week-2-structs-enums-and-pattern-matching",children:"Week 2: Structs, Enums, and Pattern Matching"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This week focuses on Rust's custom data types and pattern matching capabilities, essential features for building complex systems."}),"\n",(0,i.jsx)(n.h2,{id:"topics-covered",children:"Topics Covered"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Structs implementation and usage"}),"\n",(0,i.jsx)(n.li,{children:"Enums and their versatility"}),"\n",(0,i.jsx)(n.li,{children:"Pattern matching techniques"}),"\n",(0,i.jsxs)(n.li,{children:["Working with ",(0,i.jsx)(n.code,{children:"Option<T>"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsx)(n.h3,{id:"structs",children:"Structs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Defining structs"}),"\n",(0,i.jsx)(n.li,{children:"Struct methods and associated functions"}),"\n",(0,i.jsx)(n.li,{children:"Struct update syntax"}),"\n",(0,i.jsx)(n.li,{children:"Tuple structs and unit structs"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"enums",children:"Enums"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enum definition and variants"}),"\n",(0,i.jsx)(n.li,{children:"Storing data in enums"}),"\n",(0,i.jsx)(n.li,{children:"The Option enum"}),"\n",(0,i.jsx)(n.li,{children:"Implementing methods on enums"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-matching",children:"Pattern Matching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"match"})," expressions"]}),"\n",(0,i.jsx)(n.li,{children:"Pattern types"}),"\n",(0,i.jsx)(n.li,{children:"Match guards"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"if let"})," syntax"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"while let"})," syntax"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"project-task-manager",children:"Project: Task Manager"}),"\n",(0,i.jsx)(n.p,{children:"Build a command-line task manager that demonstrates:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Task struct with various fields"}),"\n",(0,i.jsx)(n.li,{children:"Status enum for task states"}),"\n",(0,i.jsx)(n.li,{children:"Pattern matching for task operations"}),"\n",(0,i.jsx)(n.li,{children:"Option handling for task queries"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"project-requirements",children:"Project Requirements"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create tasks with title, description, due date"}),"\n",(0,i.jsx)(n.li,{children:"Mark tasks as pending/in-progress/completed"}),"\n",(0,i.jsx)(n.li,{children:"List tasks with different filters"}),"\n",(0,i.jsx)(n.li,{children:"Delete tasks"}),"\n",(0,i.jsx)(n.li,{children:"Update task status"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Design custom types"}),"\n",(0,i.jsx)(n.li,{children:"Implement methods"}),"\n",(0,i.jsx)(n.li,{children:"Use pattern matching effectively"}),"\n",(0,i.jsx)(n.li,{children:"Handle optional values"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://doc.rust-lang.org/book/ch05-00-structs.html",children:"Rust Book Chapter 5: Structs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://doc.rust-lang.org/book/ch06-00-enums.html",children:"Rust Book Chapter 6: Enums and Pattern Matching"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);